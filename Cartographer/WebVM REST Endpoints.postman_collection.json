{
	"info": {
		"_postman_id": "29f7ceb9-6f0f-4adb-85ba-af1f42fe6548",
		"name": "Cartographer Api Endpoints",
		"description": "TGC Product Description - https://confluence.opentext.com/display/BNTGO/Trading+Grid+Cartographer+22.3+APIs\n\nContact Support:\n Name: NimbleWits\n Email: gxs-gxsitcnimblewits@opentext.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12320982"
	},
	"item": [
		{
			"name": "Authorization",
			"item": [
				{
					"name": "Get Auth token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"\r",
									"pm.environment.unset(\"token\");\r",
									"\r",
									"pm.environment.set(\"token\", \"Bearer \"+ data.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "(Required) Consumer secret",
								"key": "password",
								"value": "{{password}}"
							},
							{
								"description": "(Required) Consumer key",
								"key": "username",
								"value": "{{username}}"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api_host}}/v1/auth",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"v1",
								"auth"
							]
						},
						"description": "Get access token by providing consumer key and secret."
					},
					"response": [
						{
							"name": "Return access token",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Consumer secret",
										"key": "password",
										"value": "{{password}}"
									},
									{
										"description": "(Required) Consumer key",
										"key": "username",
										"value": "{{username}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/v1/auth",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"auth"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"accessToken\": \"<string>\",\n  \"clientId\": \"<string>\",\n  \"expiresInSec\": \"<string>\",\n  \"status\": \"<string>\",\n  \"tokenType\": \"<string>\"\n}"
						},
						{
							"name": "Invalid Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Consumer secret",
										"key": "password",
										"value": "{{password}}"
									},
									{
										"description": "(Required) Consumer key",
										"key": "username",
										"value": "{{username}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/v1/auth",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"auth"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Un-Authorised",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Consumer secret",
										"key": "password",
										"value": "{{password}}"
									},
									{
										"description": "(Required) Consumer key",
										"key": "username",
										"value": "{{username}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/v1/auth",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"auth"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Consumer secret",
										"key": "password",
										"value": "{{password}}"
									},
									{
										"description": "(Required) Consumer key",
										"key": "username",
										"value": "{{username}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/v1/auth",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"auth"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Consumer secret",
										"key": "password",
										"value": "{{password}}"
									},
									{
										"description": "(Required) Consumer key",
										"key": "username",
										"value": "{{username}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/v1/auth",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"v1",
										"auth"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "Auth Controller"
		},
		{
			"name": "Maps",
			"item": [
				{
					"name": "Map details",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api_host}}/mp/rest/v1/map-info?mapId=<long>&mapName=<string>&solutionId=<string>",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"mp",
								"rest",
								"v1",
								"map-info"
							],
							"query": [
								{
									"key": "mapId",
									"value": "<long>",
									"description": "Node Id of the business workspace"
								},
								{
									"key": "mapName",
									"value": "<string>",
									"description": "Name of the map"
								},
								{
									"key": "solutionId",
									"value": "<string>",
									"description": "(Required) Solution of the map"
								}
							]
						},
						"description": "Get map infomation by specifying either mapId or mapName under a solutionId."
					},
					"response": [
						{
							"name": "Return Map info",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map-info?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map-info"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"acceptanceState\": \"<string>\",\n  \"carbonCopy\": \"<string>\",\n  \"characterConversion\": \"<string>\",\n  \"chunking\": \"<string>\",\n  \"clonable\": \"<boolean>\",\n  \"commentCount\": \"<long>\",\n  \"customerModifiedMap\": \"<string>\",\n  \"databaseLookup\": \"<string>\",\n  \"direction\": \"<string>\",\n  \"docType\": \"<string>\",\n  \"id\": \"<string>\",\n  \"lastModifiedDate\": \"<string>\",\n  \"multiByteData\": \"<string>\",\n  \"multipleTPLogic\": \"<string>\",\n  \"name\": \"<string>\",\n  \"passThrough\": \"<string>\",\n  \"preProcess\": \"<string>\",\n  \"prodMap\": \"<string>\",\n  \"reserve\": {\n    \"timestamp\": \"<long>\",\n    \"userId\": \"<string>\",\n    \"userName\": \"<string>\"\n  },\n  \"schedule\": {\n    \"requestedTimeMs\": \"<long>\",\n    \"scheduledTimeMs\": \"<long>\",\n    \"type\": \"<string>\",\n    \"userName\": \"<string>\"\n  },\n  \"sorting\": \"<string>\",\n  \"sortingList\": \"<string>\",\n  \"srcApplication\": \"<string>\",\n  \"srcDocType\": \"<string>\",\n  \"srcFormat\": \"<string>\",\n  \"srcStd\": \"<string>\",\n  \"srcTransaction\": \"<string>\",\n  \"srcVersion\": \"<string>\",\n  \"standard\": \"<string>\",\n  \"status\": \"<string>\",\n  \"tgtApplication\": \"<string>\",\n  \"tgtDocType\": \"<string>\",\n  \"tgtFormat\": \"<string>\",\n  \"tgtStd\": \"<string>\",\n  \"tgtTransaction\": \"<string>\",\n  \"tgtVersion\": \"<string>\",\n  \"translator\": \"<string>\",\n  \"version\": \"<string>\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map-info?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map-info"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Un-Authorised",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map-info?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map-info"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map-info?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map-info"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Map Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map-info?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map-info"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map-info?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map-info"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Add new version of map",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "(Required) file",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{api_host}}/mp/rest/v1/map/add-version?mapId=<long>&mapName=<string>&solutionId=<string>",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"mp",
								"rest",
								"v1",
								"map",
								"add-version"
							],
							"query": [
								{
									"key": "mapId",
									"value": "<long>",
									"description": "Node Id of the business workspace"
								},
								{
									"key": "mapName",
									"value": "<string>",
									"description": "Name of the map"
								},
								{
									"key": "solutionId",
									"value": "<string>",
									"description": "(Required) solution Id of map"
								}
							]
						},
						"description": "Add new version of xbm file by specifying either mapId or mapName under a solutionId."
					},
					"response": [
						{
							"name": "New Version Added Sucessfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "<binary>",
											"description": "(Required) file",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/add-version?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"add-version"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<object>\""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "<binary>",
											"description": "(Required) file",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/add-version?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"add-version"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Un-Authorised",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "<binary>",
											"description": "(Required) file",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/add-version?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"add-version"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Data Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "<binary>",
											"description": "(Required) file",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/add-version?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"add-version"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "<binary>",
											"description": "(Required) file",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/add-version?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"add-version"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Map comments",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api_host}}/mp/rest/v1/map/comments?mapId=<long>&mapName=<string>&solutionId=<string>",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"mp",
								"rest",
								"v1",
								"map",
								"comments"
							],
							"query": [
								{
									"key": "mapId",
									"value": "<long>",
									"description": "Node Id of the business workspace"
								},
								{
									"key": "mapName",
									"value": "<string>",
									"description": "Name of the map"
								},
								{
									"key": "solutionId",
									"value": "<string>",
									"description": "(Required) Solution of the map"
								}
							]
						},
						"description": "Get annotations for a map by specifying either mapId or mapName under a solutionId."
					},
					"response": [
						{
							"name": "Returned Map Comments",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/comments?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"comments"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"commentVersions\": [\n    {\n      \"comments\": [\n        {\n          \"attachments\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"commentMessage\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"commentType\": \"<string>\",\n          \"id\": \"<long>\",\n          \"isVisible\": \"<boolean>\",\n          \"mapVersion\": \"<string>\",\n          \"replies\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/Comment detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/Comment detected>\"\n            }\n          ],\n          \"sourceNodeId\": \"<string>\",\n          \"targetNodeId\": \"<string>\",\n          \"workOrderId\": \"<string>\"\n        },\n        {\n          \"attachments\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"commentMessage\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"commentType\": \"<string>\",\n          \"id\": \"<long>\",\n          \"isVisible\": \"<boolean>\",\n          \"mapVersion\": \"<string>\",\n          \"replies\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/Comment detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/Comment detected>\"\n            }\n          ],\n          \"sourceNodeId\": \"<string>\",\n          \"targetNodeId\": \"<string>\",\n          \"workOrderId\": \"<string>\"\n        }\n      ],\n      \"count\": \"<long>\",\n      \"version\": \"<string>\"\n    },\n    {\n      \"comments\": [\n        {\n          \"attachments\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"commentMessage\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"commentType\": \"<string>\",\n          \"id\": \"<long>\",\n          \"isVisible\": \"<boolean>\",\n          \"mapVersion\": \"<string>\",\n          \"replies\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/Comment detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/Comment detected>\"\n            }\n          ],\n          \"sourceNodeId\": \"<string>\",\n          \"targetNodeId\": \"<string>\",\n          \"workOrderId\": \"<string>\"\n        },\n        {\n          \"attachments\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"commentMessage\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"commentType\": \"<string>\",\n          \"id\": \"<long>\",\n          \"isVisible\": \"<boolean>\",\n          \"mapVersion\": \"<string>\",\n          \"replies\": [\n            {\n              \"value\": \"<Circular reference to #/components/schemas/Comment detected>\"\n            },\n            {\n              \"value\": \"<Circular reference to #/components/schemas/Comment detected>\"\n            }\n          ],\n          \"sourceNodeId\": \"<string>\",\n          \"targetNodeId\": \"<string>\",\n          \"workOrderId\": \"<string>\"\n        }\n      ],\n      \"count\": \"<long>\",\n      \"version\": \"<string>\"\n    }\n  ],\n  \"links\": {\n    \"cardinalityLinkCount\": \"<long>\",\n    \"cardinalityLinks\": [\n      {\n        \"condition\": \"<string>\",\n        \"linkOperation\": \"<string>\",\n        \"sourceId\": \"<string>\",\n        \"sourceName\": \"<string>\",\n        \"targetId\": \"<string>\",\n        \"targetName\": \"<string>\",\n        \"visible\": \"<boolean>\"\n      },\n      {\n        \"condition\": \"<string>\",\n        \"linkOperation\": \"<string>\",\n        \"sourceId\": \"<string>\",\n        \"sourceName\": \"<string>\",\n        \"targetId\": \"<string>\",\n        \"targetName\": \"<string>\",\n        \"visible\": \"<boolean>\"\n      }\n    ],\n    \"mappingLinks\": [\n      {\n        \"commentOwner\": \"<string>\",\n        \"linkId\": \"<string>\",\n        \"linkOperation\": \"<string>\",\n        \"linkType\": \"<string>\",\n        \"sourceId\": \"<string>\",\n        \"sourceName\": \"<string>\",\n        \"targetId\": \"<string>\",\n        \"targetName\": \"<string>\",\n        \"tgt2tgt\": \"<boolean>\"\n      },\n      {\n        \"commentOwner\": \"<string>\",\n        \"linkId\": \"<string>\",\n        \"linkOperation\": \"<string>\",\n        \"linkType\": \"<string>\",\n        \"sourceId\": \"<string>\",\n        \"sourceName\": \"<string>\",\n        \"targetId\": \"<string>\",\n        \"targetName\": \"<string>\",\n        \"tgt2tgt\": \"<boolean>\"\n      }\n    ],\n    \"mappingLinksCount\": \"<long>\"\n  },\n  \"map\": \"<string>\",\n  \"mapNodes\": [\n    {\n      \"nodeId\": \"<string>\",\n      \"nodeIndex\": \"<integer>\",\n      \"nodeName\": \"<string>\",\n      \"nodeOperation\": \"<string>\",\n      \"nodeType\": \"<string>\",\n      \"parentId\": \"<string>\",\n      \"visible\": \"<boolean>\"\n    },\n    {\n      \"nodeId\": \"<string>\",\n      \"nodeIndex\": \"<integer>\",\n      \"nodeName\": \"<string>\",\n      \"nodeOperation\": \"<string>\",\n      \"nodeType\": \"<string>\",\n      \"parentId\": \"<string>\",\n      \"visible\": \"<boolean>\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/comments?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"comments"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Un-Authorised",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/comments?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"comments"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/comments?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"comments"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Data Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/comments?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"comments"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/comments?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"comments"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Reserve map",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api_host}}/mp/rest/v1/map/reserve?mapId=<long>&mapName=<string>&solutionId=<string>",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"mp",
								"rest",
								"v1",
								"map",
								"reserve"
							],
							"query": [
								{
									"key": "mapId",
									"value": "<long>",
									"description": "Node Id of the business workspace"
								},
								{
									"key": "mapName",
									"value": "<string>",
									"description": "Name of the map"
								},
								{
									"key": "solutionId",
									"value": "<string>",
									"description": "(Required) Solution of the map"
								}
							]
						},
						"description": "Reserve a map by specifying either mapId or mapName under a solutionId."
					},
					"response": [
						{
							"name": "Map Reserved Successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/reserve?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"reserve"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"action\": \"<string>\",\n  \"bwsname\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"mapId\": \"<integer>\",\n  \"mapName\": \"<string>\",\n  \"solutionId\": \"<string>\",\n  \"timestamp\": \"<long>\",\n  \"userId\": \"<string>\",\n  \"userType\": \"<string>\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/reserve?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"reserve"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Un-Authorised",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/reserve?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"reserve"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/reserve?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"reserve"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Map Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/reserve?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"reserve"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/reserve?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"reserve"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get map-reserve information",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api_host}}/mp/rest/v1/map/reserve-info?mapId=<long>&mapName=<string>&solutionId=<string>",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"mp",
								"rest",
								"v1",
								"map",
								"reserve-info"
							],
							"query": [
								{
									"key": "mapId",
									"value": "<long>",
									"description": "Node Id of the business workspace"
								},
								{
									"key": "mapName",
									"value": "<string>",
									"description": "Name of the map"
								},
								{
									"key": "solutionId",
									"value": "<string>",
									"description": "(Required) Solution of the map"
								}
							]
						},
						"description": "Get reserve information of a map by specifying either mapId or mapName under a solutionId."
					},
					"response": [
						{
							"name": "Reserve information of map",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/reserve-info?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"reserve-info"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"action\": \"<string>\",\n  \"bwsname\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"mapId\": \"<integer>\",\n  \"mapName\": \"<string>\",\n  \"solutionId\": \"<string>\",\n  \"timestamp\": \"<long>\",\n  \"userId\": \"<string>\",\n  \"userType\": \"<string>\"\n}"
						},
						{
							"name": "Map Is Not Reserved",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/reserve-info?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"reserve-info"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<object>\""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/reserve-info?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"reserve-info"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Un-Authorised",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/reserve-info?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"reserve-info"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/reserve-info?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"reserve-info"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Map Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/reserve-info?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"reserve-info"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/reserve-info?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"reserve-info"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Un-reserve map",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api_host}}/mp/rest/v1/map/un-reserve?mapId=<long>&mapName=<string>&solutionId=<string>",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"mp",
								"rest",
								"v1",
								"map",
								"un-reserve"
							],
							"query": [
								{
									"key": "mapId",
									"value": "<long>",
									"description": "Node Id of the business workspace"
								},
								{
									"key": "mapName",
									"value": "<string>",
									"description": "Name of the map"
								},
								{
									"key": "solutionId",
									"value": "<string>",
									"description": "(Required) Solution of the map"
								}
							]
						},
						"description": "Un-reserve a reserved map by specifying either mapId or mapName under a solutionId."
					},
					"response": [
						{
							"name": "Map un-reserved successfully",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/un-reserve?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"un-reserve"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<object>\""
						},
						{
							"name": "No Content",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/un-reserve?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"un-reserve"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<object>\""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/un-reserve?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"un-reserve"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Un-Authorised",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/un-reserve?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"un-reserve"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/un-reserve?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"un-reserve"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Map Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/un-reserve?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"un-reserve"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/un-reserve?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"un-reserve"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get maps",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api_host}}/mp/rest/v1/maps?pageNo=<string>&pageSize=<string>&solutionId=<string>&sort=<string>",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"mp",
								"rest",
								"v1",
								"maps"
							],
							"query": [
								{
									"key": "pageNo",
									"value": "<string>",
									"description": "Page from which maps need to be listed"
								},
								{
									"key": "pageSize",
									"value": "<string>",
									"description": "Number of items in each page"
								},
								{
									"key": "solutionId",
									"value": "<string>",
									"description": "(Required) Solution for which maps need to be listed"
								},
								{
									"key": "sort",
									"value": "<string>",
									"description": "Sorting order to list maps"
								}
							]
						},
						"description": "Get list of maps with map metadata under a solutionId. To get paginated response, mention pageSize and pageNo. Specify the sorting order to get the maps list in either ascending or descending order."
					},
					"response": [
						{
							"name": "Successfully Fetched Maps",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/maps?pageNo=<string>&pageSize=<string>&solutionId=<string>&sort=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"maps"
									],
									"query": [
										{
											"key": "pageNo",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										},
										{
											"key": "sort",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"page\": {\n    \"page\": \"<string>\",\n    \"pageSize\": \"<string>\",\n    \"pageTotal\": \"<string>\",\n    \"sortOrder\": \"<string>\",\n    \"totalCount\": \"<string>\"\n  },\n  \"response\": [\n    {\n      \"acceptanceState\": \"<string>\",\n      \"carbonCopy\": \"<string>\",\n      \"characterConversion\": \"<string>\",\n      \"chunking\": \"<string>\",\n      \"clonable\": \"<boolean>\",\n      \"commentCount\": \"<long>\",\n      \"customerModifiedMap\": \"<string>\",\n      \"databaseLookup\": \"<string>\",\n      \"direction\": \"<string>\",\n      \"docType\": \"<string>\",\n      \"id\": \"<string>\",\n      \"lastModifiedDate\": \"<string>\",\n      \"multiByteData\": \"<string>\",\n      \"multipleTPLogic\": \"<string>\",\n      \"name\": \"<string>\",\n      \"passThrough\": \"<string>\",\n      \"preProcess\": \"<string>\",\n      \"prodMap\": \"<string>\",\n      \"reserve\": {\n        \"timestamp\": \"<long>\",\n        \"userId\": \"<string>\",\n        \"userName\": \"<string>\"\n      },\n      \"schedule\": {\n        \"requestedTimeMs\": \"<long>\",\n        \"scheduledTimeMs\": \"<long>\",\n        \"type\": \"<string>\",\n        \"userName\": \"<string>\"\n      },\n      \"sorting\": \"<string>\",\n      \"sortingList\": \"<string>\",\n      \"srcApplication\": \"<string>\",\n      \"srcDocType\": \"<string>\",\n      \"srcFormat\": \"<string>\",\n      \"srcStd\": \"<string>\",\n      \"srcTransaction\": \"<string>\",\n      \"srcVersion\": \"<string>\",\n      \"standard\": \"<string>\",\n      \"status\": \"<string>\",\n      \"tgtApplication\": \"<string>\",\n      \"tgtDocType\": \"<string>\",\n      \"tgtFormat\": \"<string>\",\n      \"tgtStd\": \"<string>\",\n      \"tgtTransaction\": \"<string>\",\n      \"tgtVersion\": \"<string>\",\n      \"translator\": \"<string>\",\n      \"version\": \"<string>\"\n    },\n    {\n      \"acceptanceState\": \"<string>\",\n      \"carbonCopy\": \"<string>\",\n      \"characterConversion\": \"<string>\",\n      \"chunking\": \"<string>\",\n      \"clonable\": \"<boolean>\",\n      \"commentCount\": \"<long>\",\n      \"customerModifiedMap\": \"<string>\",\n      \"databaseLookup\": \"<string>\",\n      \"direction\": \"<string>\",\n      \"docType\": \"<string>\",\n      \"id\": \"<string>\",\n      \"lastModifiedDate\": \"<string>\",\n      \"multiByteData\": \"<string>\",\n      \"multipleTPLogic\": \"<string>\",\n      \"name\": \"<string>\",\n      \"passThrough\": \"<string>\",\n      \"preProcess\": \"<string>\",\n      \"prodMap\": \"<string>\",\n      \"reserve\": {\n        \"timestamp\": \"<long>\",\n        \"userId\": \"<string>\",\n        \"userName\": \"<string>\"\n      },\n      \"schedule\": {\n        \"requestedTimeMs\": \"<long>\",\n        \"scheduledTimeMs\": \"<long>\",\n        \"type\": \"<string>\",\n        \"userName\": \"<string>\"\n      },\n      \"sorting\": \"<string>\",\n      \"sortingList\": \"<string>\",\n      \"srcApplication\": \"<string>\",\n      \"srcDocType\": \"<string>\",\n      \"srcFormat\": \"<string>\",\n      \"srcStd\": \"<string>\",\n      \"srcTransaction\": \"<string>\",\n      \"srcVersion\": \"<string>\",\n      \"standard\": \"<string>\",\n      \"status\": \"<string>\",\n      \"tgtApplication\": \"<string>\",\n      \"tgtDocType\": \"<string>\",\n      \"tgtFormat\": \"<string>\",\n      \"tgtStd\": \"<string>\",\n      \"tgtTransaction\": \"<string>\",\n      \"tgtVersion\": \"<string>\",\n      \"translator\": \"<string>\",\n      \"version\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/maps?pageNo=<string>&pageSize=<string>&solutionId=<string>&sort=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"maps"
									],
									"query": [
										{
											"key": "pageNo",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										},
										{
											"key": "sort",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Un-Authorised",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/maps?pageNo=<string>&pageSize=<string>&solutionId=<string>&sort=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"maps"
									],
									"query": [
										{
											"key": "pageNo",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										},
										{
											"key": "sort",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Data Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/maps?pageNo=<string>&pageSize=<string>&solutionId=<string>&sort=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"maps"
									],
									"query": [
										{
											"key": "pageNo",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										},
										{
											"key": "sort",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/maps?pageNo=<string>&pageSize=<string>&solutionId=<string>&sort=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"maps"
									],
									"query": [
										{
											"key": "pageNo",
											"value": "<string>"
										},
										{
											"key": "pageSize",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										},
										{
											"key": "sort",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Download XBM",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/octet-stream"
							}
						],
						"url": {
							"raw": "{{api_host}}/mp/rest/v1/xbm/download?xbmId=<string>&xbmVersion=<string>",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"mp",
								"rest",
								"v1",
								"xbm",
								"download"
							],
							"query": [
								{
									"key": "xbmId",
									"value": "<string>",
									"description": "(Required) Node Id of the xbm file"
								},
								{
									"key": "xbmVersion",
									"value": "<string>",
									"description": "(Required) Version of map"
								}
							]
						},
						"description": "Download XBM file by specifying nodeId and version of the XBM."
					},
					"response": [
						{
							"name": "XBM resource file download",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"description": "(Required) Media-type of the map",
										"key": "accept",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/xbm/download?xbmId=<string>&xbmVersion=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"xbm",
										"download"
									],
									"query": [
										{
											"key": "xbmId",
											"value": "<string>"
										},
										{
											"key": "xbmVersion",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"description\": \"<string>\",\n  \"file\": \"<binary>\",\n  \"filename\": \"<string>\",\n  \"inputStream\": \"<object>\",\n  \"open\": \"<boolean>\",\n  \"readable\": \"<boolean>\",\n  \"uri\": \"<uri>\",\n  \"url\": \"<url>\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"description": "(Required) Media-type of the map",
										"key": "accept",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/xbm/download?xbmId=<string>&xbmVersion=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"xbm",
										"download"
									],
									"query": [
										{
											"key": "xbmId",
											"value": "<string>"
										},
										{
											"key": "xbmVersion",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Un-Authorised",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"description": "(Required) Media-type of the map",
										"key": "accept",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/xbm/download?xbmId=<string>&xbmVersion=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"xbm",
										"download"
									],
									"query": [
										{
											"key": "xbmId",
											"value": "<string>"
										},
										{
											"key": "xbmVersion",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Data not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"description": "(Required) Media-type of the map",
										"key": "accept",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/xbm/download?xbmId=<string>&xbmVersion=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"xbm",
										"download"
									],
									"query": [
										{
											"key": "xbmId",
											"value": "<string>"
										},
										{
											"key": "xbmVersion",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									},
									{
										"description": "(Required) Media-type of the map",
										"key": "accept",
										"value": "<string>"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/xbm/download?xbmId=<string>&xbmVersion=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"xbm",
										"download"
									],
									"query": [
										{
											"key": "xbmId",
											"value": "<string>"
										},
										{
											"key": "xbmVersion",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get latest 5 version of the XBM",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api_host}}/mp/rest/v1/xbm/versions?mapId=<long>&mapName=<string>&solutionId=<string>",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"mp",
								"rest",
								"v1",
								"xbm",
								"versions"
							],
							"query": [
								{
									"key": "mapId",
									"value": "<long>",
									"description": "Node Id of the business workspace"
								},
								{
									"key": "mapName",
									"value": "<string>",
									"description": "Name of the map"
								},
								{
									"key": "solutionId",
									"value": "<string>",
									"description": "(Required) Solution of the map"
								}
							]
						},
						"description": "Get list of 5 latest versions of the XBM by specifying either mapId or mapName under a solutionId."
					},
					"response": [
						{
							"name": "List XBM versions",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/xbm/versions?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"xbm",
										"versions"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"childrenCount\": \"<long>\",\n    \"id\": \"<long>\",\n    \"lastModifiedDate\": \"<string>\",\n    \"name\": \"<string>\",\n    \"parentID\": \"<long>\",\n    \"reserved\": \"<boolean>\",\n    \"reserved_date\": \"<string>\",\n    \"reserved_user_id\": \"<string>\",\n    \"reserved_user_id_expand\": {\n      \"id\": \"<string>\",\n      \"name_formatted\": \"<string>\"\n    },\n    \"size\": \"<string>\",\n    \"status\": \"<string>\",\n    \"version\": \"<long>\"\n  },\n  {\n    \"childrenCount\": \"<long>\",\n    \"id\": \"<long>\",\n    \"lastModifiedDate\": \"<string>\",\n    \"name\": \"<string>\",\n    \"parentID\": \"<long>\",\n    \"reserved\": \"<boolean>\",\n    \"reserved_date\": \"<string>\",\n    \"reserved_user_id\": \"<string>\",\n    \"reserved_user_id_expand\": {\n      \"id\": \"<string>\",\n      \"name_formatted\": \"<string>\"\n    },\n    \"size\": \"<string>\",\n    \"status\": \"<string>\",\n    \"version\": \"<long>\"\n  }\n]"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/xbm/versions?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"xbm",
										"versions"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Un-Authorised",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/xbm/versions?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"xbm",
										"versions"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/xbm/versions?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"xbm",
										"versions"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "XBM Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/xbm/versions?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"xbm",
										"versions"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/xbm/versions?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"xbm",
										"versions"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "Map Controller"
		},
		{
			"name": "Solutions",
			"item": [
				{
					"name": "Get solutions",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api_host}}/mp/rest/v1/solutions",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"mp",
								"rest",
								"v1",
								"solutions"
							]
						},
						"description": "Get list of solutions for user."
					},
					"response": [
						{
							"name": "Successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/solutions",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"solutions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  \"<object>\",\n  \"<object>\"\n]"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/solutions",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"solutions"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "User Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/solutions",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"solutions"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/solutions",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"solutions"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "Solutions Controller"
		},
		{
			"name": "Trading Partners",
			"item": [
				{
					"name": "Get tuples",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api_host}}/mp/rest/v1/map/tuples?mapId=<long>&mapName=<string>&solutionId=<string>",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"mp",
								"rest",
								"v1",
								"map",
								"tuples"
							],
							"query": [
								{
									"key": "mapId",
									"value": "<long>",
									"description": "Node Id of the business workspace"
								},
								{
									"key": "mapName",
									"value": "<string>",
									"description": "Name of the map"
								},
								{
									"key": "solutionId",
									"value": "<string>",
									"description": "(Required) Solution of the map"
								}
							]
						},
						"description": "Get tuple information for TP setups by specifying either mapId or mapName under a solutionId."
					},
					"response": [
						{
							"name": "Tuples fetched successfully",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/tuples?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"tuples"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"count\": \"<long>\",\n  \"tuples\": [\n    {\n      \"direction\": \"<string>\",\n      \"docType\": \"<string>\",\n      \"href\": \"<string>\",\n      \"mapName\": \"<string>\",\n      \"name\": \"<string>\",\n      \"policy\": \"<string>\",\n      \"receiver\": \"<string>\",\n      \"sender\": \"<string>\",\n      \"solutionId\": \"<string>\",\n      \"srcType\": \"<string>\",\n      \"tgtType\": \"<string>\",\n      \"tpName\": \"<string>\",\n      \"translator\": \"<string>\",\n      \"version\": \"<string>\"\n    },\n    {\n      \"direction\": \"<string>\",\n      \"docType\": \"<string>\",\n      \"href\": \"<string>\",\n      \"mapName\": \"<string>\",\n      \"name\": \"<string>\",\n      \"policy\": \"<string>\",\n      \"receiver\": \"<string>\",\n      \"sender\": \"<string>\",\n      \"solutionId\": \"<string>\",\n      \"srcType\": \"<string>\",\n      \"tgtType\": \"<string>\",\n      \"tpName\": \"<string>\",\n      \"translator\": \"<string>\",\n      \"version\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/tuples?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"tuples"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Un-Authorised",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/tuples?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"tuples"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/tuples?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"tuples"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Data Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/tuples?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"tuples"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/mp/rest/v1/map/tuples?mapId=<long>&mapName=<string>&solutionId=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"mp",
										"rest",
										"v1",
										"map",
										"tuples"
									],
									"query": [
										{
											"key": "mapId",
											"value": "<long>"
										},
										{
											"key": "mapName",
											"value": "<string>"
										},
										{
											"key": "solutionId",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errorCode\": \"<string>\",\n  \"errorMessage\": \"<string>\",\n  \"httpStatus\": \"<string>\",\n  \"status\": \"<string>\",\n  \"statusCode\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "Tuple Controller"
		},
		{
			"name": "Xref External Api",
			"item": [
				{
					"name": "Get Xref Table details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text",
								"description": "(Required) OAuth 2.0 Authorization token"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_host}}/xref/xrefselfserveapp/rest/xrefSelfServeExternalApi/v1/getXrefDetailsTable?solutionId=<string>&tableId=<string>",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"xref",
								"xrefselfserveapp",
								"rest",
								"xrefSelfServeExternalApi",
								"v1",
								"getXrefDetailsTable"
							],
							"query": [
								{
									"key": "after",
									"value": "<Integer>",
									"description": "Number of items to be listed after value",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "<Integer>",
									"description": "Number of items to be listed",
									"disabled": true
								},
								{
									"key": "solutionId",
									"value": "<string>",
									"description": "(Required) Solution for which tables details need to be listed"
								},
								{
									"key": "tableId",
									"value": "<string>",
									"description": "(Required) TableId for which tables details need to be listed"
								},
								{
									"key": "isDownloadable",
									"value": "<Boolean>",
									"description": "isDownloadable",
									"disabled": true
								},
								{
									"key": null,
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Xref Tables",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text",
								"description": "(Required) OAuth 2.0 Authorization token"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api_host}}/xref/xrefselfserveapp/rest/xrefSelfServeExternalApi/v1/getXrefTables?solutionId=<string>",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"xref",
								"xrefselfserveapp",
								"rest",
								"xrefSelfServeExternalApi",
								"v1",
								"getXrefTables"
							],
							"query": [
								{
									"key": "solutionId",
									"value": "<string>",
									"description": "(Required) Solution for which tables need to be listed"
								},
								{
									"key": "limit",
									"value": "<Integer>",
									"description": "Number of items to be listed",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "api_host",
			"value": "http://bp2-vwpgrt-q001.otxlab.net:9001/cartographer",
			"type": "string"
		}
	]
}