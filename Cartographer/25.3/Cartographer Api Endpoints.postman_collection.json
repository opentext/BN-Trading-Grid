{
	"info": {
		"_postman_id": "cba51002-d367-4843-8737-03a7a1dc1683",
		"name": "Cartographer Api Endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Solutions",
			"item": [
				{
					"name": "Get solutions",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api_host}}/cartographer/mp/v1/solutions",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"cartographer",
								"mp",
								"v1",
								"solutions"
							]
						},
						"description": "Get list of solutions for user."
					},
					"response": [
						{
							"name": "Solutions Listed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n\t\"<string>\",\n\t\"<string>\"\n]"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Data Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Maps",
			"item": [
				{
					"name": "Get maps",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps?pageNo=<integer>&pageSize=<integer>&sort=<string>",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"cartographer",
								"mp",
								"v1",
								"solutions",
								":solutionId",
								"maps"
							],
							"query": [
								{
									"key": "pageNo",
									"value": "<integer>",
									"description": "Page from which maps need to be listed"
								},
								{
									"key": "pageSize",
									"value": "<integer>",
									"description": "Number of items in each page"
								},
								{
									"key": "sort",
									"value": "<string>",
									"description": "Sorting order to list maps"
								}
							],
							"variable": [
								{
									"key": "solutionId",
									"value": "{{solutionId}}",
									"description": "(Required) Solution for which maps need to be listed"
								}
							]
						},
						"description": "Get list of maps with map metadata under a solutionId. To get paginated response, mention pageSize and pageNo. Specify the sorting order to get the maps list in either ascending or descending order."
					},
					"response": [
						{
							"name": "Maps Fetched",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps?pageNo=<integer>&pageSize=<integer>&sort=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions",
										":solutionId",
										"maps"
									],
									"query": [
										{
											"key": "pageNo",
											"value": "<integer>"
										},
										{
											"key": "pageSize",
											"value": "<integer>"
										},
										{
											"key": "sort",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution for which maps need to be listed"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"page\": {\n\t\t\"page\": \"<integer>\",\n\t\t\"pageSize\": \"<integer>\",\n\t\t\"pageTotal\": \"<integer>\",\n\t\t\"totalCount\": \"<integer>\",\n\t\t\"sortOrder\": \"<string>\"\n\t},\n\t\"response\": [\n\t\t{\n\t\t\t\"id\": \"<long>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"translator\": \"<string>\",\n\t\t\t\"status\": \"<string>\",\n\t\t\t\"direction\": \"<string>\",\n\t\t\t\"version\": \"<string>\",\n\t\t\t\"sourceDocType\": \"<string>\",\n\t\t\t\"sourceVersion\": \"<string>\",\n\t\t\t\"sourceStandard\": \"<string>\",\n\t\t\t\"sourceFormat\": \"<string>\",\n\t\t\t\"sourceTransaction\": \"<string>\",\n\t\t\t\"sourceApplication\": \"<string>\",\n\t\t\t\"targetDocType\": \"<string>\",\n\t\t\t\"targetVersion\": \"<string>\",\n\t\t\t\"targetStandard\": \"<string>\",\n\t\t\t\"targetFormat\": \"<string>\",\n\t\t\t\"targetTransaction\": \"<string>\",\n\t\t\t\"targetApplication\": \"<string>\",\n\t\t\t\"standard\": \"<string>\",\n\t\t\t\"docType\": \"<string>\",\n\t\t\t\"customerModifiedMap\": \"<boolean>\",\n\t\t\t\"lifecycleInfo\": {\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"requestedTimeMs\": \"<long>\",\n\t\t\t\t\"scheduledTimeMs\": \"<long>\",\n\t\t\t\t\"requester\": \"<string>\"\n\t\t\t},\n\t\t\t\"stateInfo\": {\n\t\t\t\t\"userName\": \"<string>\",\n\t\t\t\t\"userId\": \"<string>\",\n\t\t\t\t\"timestamp\": \"<long>\"\n\t\t\t},\n\t\t\t\"commentCount\": \"<long>\",\n\t\t\t\"modified\": \"<long>\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<long>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"translator\": \"<string>\",\n\t\t\t\"status\": \"<string>\",\n\t\t\t\"direction\": \"<string>\",\n\t\t\t\"version\": \"<string>\",\n\t\t\t\"sourceDocType\": \"<string>\",\n\t\t\t\"sourceVersion\": \"<string>\",\n\t\t\t\"sourceStandard\": \"<string>\",\n\t\t\t\"sourceFormat\": \"<string>\",\n\t\t\t\"sourceTransaction\": \"<string>\",\n\t\t\t\"sourceApplication\": \"<string>\",\n\t\t\t\"targetDocType\": \"<string>\",\n\t\t\t\"targetVersion\": \"<string>\",\n\t\t\t\"targetStandard\": \"<string>\",\n\t\t\t\"targetFormat\": \"<string>\",\n\t\t\t\"targetTransaction\": \"<string>\",\n\t\t\t\"targetApplication\": \"<string>\",\n\t\t\t\"standard\": \"<string>\",\n\t\t\t\"docType\": \"<string>\",\n\t\t\t\"customerModifiedMap\": \"<boolean>\",\n\t\t\t\"lifecycleInfo\": {\n\t\t\t\t\"type\": \"<string>\",\n\t\t\t\t\"requestedTimeMs\": \"<long>\",\n\t\t\t\t\"scheduledTimeMs\": \"<long>\",\n\t\t\t\t\"requester\": \"<string>\"\n\t\t\t},\n\t\t\t\"stateInfo\": {\n\t\t\t\t\"userName\": \"<string>\",\n\t\t\t\t\"userId\": \"<string>\",\n\t\t\t\t\"timestamp\": \"<long>\"\n\t\t\t},\n\t\t\t\"commentCount\": \"<long>\",\n\t\t\t\"modified\": \"<long>\"\n\t\t}\n\t],\n\t\"_links\": {\n\t\t\"self\": {\n\t\t\t\"href\": \"<string>\"\n\t\t},\n\t\t\"next\": {\n\t\t\t\"href\": \"<string>\"\n\t\t},\n\t\t\"previous\": {\n\t\t\t\"href\": \"<string>\"\n\t\t}\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps?pageNo=<integer>&pageSize=<integer>&sort=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions",
										":solutionId",
										"maps"
									],
									"query": [
										{
											"key": "pageNo",
											"value": "<integer>"
										},
										{
											"key": "pageSize",
											"value": "<integer>"
										},
										{
											"key": "sort",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution for which maps need to be listed"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps?pageNo=<integer>&pageSize=<integer>&sort=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions",
										":solutionId",
										"maps"
									],
									"query": [
										{
											"key": "pageNo",
											"value": "<integer>"
										},
										{
											"key": "pageSize",
											"value": "<integer>"
										},
										{
											"key": "sort",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution for which maps need to be listed"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Data Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps?pageNo=<integer>&pageSize=<integer>&sort=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions",
										":solutionId",
										"maps"
									],
									"query": [
										{
											"key": "pageNo",
											"value": "<integer>"
										},
										{
											"key": "pageSize",
											"value": "<integer>"
										},
										{
											"key": "sort",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution for which maps need to be listed"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps?pageNo=<integer>&pageSize=<integer>&sort=<string>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions",
										":solutionId",
										"maps"
									],
									"query": [
										{
											"key": "pageNo",
											"value": "<integer>"
										},
										{
											"key": "pageSize",
											"value": "<integer>"
										},
										{
											"key": "sort",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution for which maps need to be listed"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get trading partners",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps/:mapId/trading-partners",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"cartographer",
								"mp",
								"v1",
								"solutions",
								":solutionId",
								"maps",
								":mapId",
								"trading-partners"
							],
							"variable": [
								{
									"key": "solutionId",
									"value": "{{solutionId}}",
									"description": "(Required) Solution of the map"
								},
								{
									"key": "mapId",
									"value": "<long>",
									"description": "(Required) Node Id of the business workspace in BNAR"
								}
							]
						},
						"description": "Get trading partners information for a specific map within a solution, identified by solutionId and mapId."
					},
					"response": [
						{
							"name": "Trading Partners Listed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps/:mapId/trading-partners",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions",
										":solutionId",
										"maps",
										":mapId",
										"trading-partners"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution of the map"
										},
										{
											"key": "mapId",
											"value": "<long>",
											"description": "(Required) Node Id of the business workspace in BNAR"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"name\": \"<string>\",\n\t\"href\": \"<string>\",\n\t\"translator\": \"<string>\",\n\t\"mapName\": \"<string>\",\n\t\"docType\": \"<string>\",\n\t\"direction\": \"<string>\",\n\t\"sender\": \"<string>\",\n\t\"receiver\": \"<string>\",\n\t\"version\": \"<string>\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps/:mapId/trading-partners",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions",
										":solutionId",
										"maps",
										":mapId",
										"trading-partners"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution of the map"
										},
										{
											"key": "mapId",
											"value": "<long>",
											"description": "(Required) Node Id of the business workspace in BNAR"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps/:mapId/trading-partners",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions",
										":solutionId",
										"maps",
										":mapId",
										"trading-partners"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution of the map"
										},
										{
											"key": "mapId",
											"value": "<long>",
											"description": "(Required) Node Id of the business workspace in BNAR"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps/:mapId/trading-partners",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions",
										":solutionId",
										"maps",
										":mapId",
										"trading-partners"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution of the map"
										},
										{
											"key": "mapId",
											"value": "<long>",
											"description": "(Required) Node Id of the business workspace in BNAR"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Data Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps/:mapId/trading-partners",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions",
										":solutionId",
										"maps",
										":mapId",
										"trading-partners"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution of the map"
										},
										{
											"key": "mapId",
											"value": "<long>",
											"description": "(Required) Node Id of the business workspace in BNAR"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps/:mapId/trading-partners",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions",
										":solutionId",
										"maps",
										":mapId",
										"trading-partners"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution of the map"
										},
										{
											"key": "mapId",
											"value": "<long>",
											"description": "(Required) Node Id of the business workspace in BNAR"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get specification files of the map",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps/:mapId/specifications",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"cartographer",
								"mp",
								"v1",
								"solutions",
								":solutionId",
								"maps",
								":mapId",
								"specifications"
							],
							"variable": [
								{
									"key": "solutionId",
									"value": "{{solutionId}}",
									"description": "(Required) Solution of the map"
								},
								{
									"key": "mapId",
									"value": "<long>",
									"description": "(Required) Node Id of the business workspace in BNAR"
								}
							]
						},
						"description": "Get specification files for a specific map within a solution, identified by solutionId and mapId."
					},
					"response": [
						{
							"name": "Map Specifications Listed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps/:mapId/specifications",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions",
										":solutionId",
										"maps",
										":mapId",
										"specifications"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution of the map"
										},
										{
											"key": "mapId",
											"value": "<long>",
											"description": "(Required) Node Id of the business workspace in BNAR"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n\t{\n\t\t\"id\": \"<long>\",\n\t\t\"name\": \"<string>\",\n\t\t\"size\": \"<string>\",\n\t\t\"modified\": \"<long>\"\n\t},\n\t{\n\t\t\"id\": \"<long>\",\n\t\t\"name\": \"<string>\",\n\t\t\"size\": \"<string>\",\n\t\t\"modified\": \"<long>\"\n\t}\n]"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps/:mapId/specifications",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions",
										":solutionId",
										"maps",
										":mapId",
										"specifications"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution of the map"
										},
										{
											"key": "mapId",
											"value": "<long>",
											"description": "(Required) Node Id of the business workspace in BNAR"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps/:mapId/specifications",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions",
										":solutionId",
										"maps",
										":mapId",
										"specifications"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution of the map"
										},
										{
											"key": "mapId",
											"value": "<long>",
											"description": "(Required) Node Id of the business workspace in BNAR"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps/:mapId/specifications",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions",
										":solutionId",
										"maps",
										":mapId",
										"specifications"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution of the map"
										},
										{
											"key": "mapId",
											"value": "<long>",
											"description": "(Required) Node Id of the business workspace in BNAR"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Content Server Node Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps/:mapId/specifications",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions",
										":solutionId",
										"maps",
										":mapId",
										"specifications"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution of the map"
										},
										{
											"key": "mapId",
											"value": "<long>",
											"description": "(Required) Node Id of the business workspace in BNAR"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps/:mapId/specifications",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions",
										":solutionId",
										"maps",
										":mapId",
										"specifications"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution of the map"
										},
										{
											"key": "mapId",
											"value": "<long>",
											"description": "(Required) Node Id of the business workspace in BNAR"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Download map specification",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/octet-stream"
							}
						],
						"url": {
							"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps/:mapId/specifications/:fileId",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"cartographer",
								"mp",
								"v1",
								"solutions",
								":solutionId",
								"maps",
								":mapId",
								"specifications",
								":fileId"
							],
							"variable": [
								{
									"key": "solutionId",
									"value": "{{solutionId}}",
									"description": "(Required) Solution of the map"
								},
								{
									"key": "mapId",
									"value": "<long>",
									"description": "(Required) Node Id of the business workspace in BNAR"
								},
								{
									"key": "fileId",
									"value": "<long>",
									"description": "(Required) Id of the map specification"
								}
							]
						},
						"description": "Download the map specification file for a specific map within a solution, identified by the solutionId, mapId, and fileId."
					},
					"response": [
						{
							"name": "Map Specification Downloaded",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps/:mapId/specifications/:fileId",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions",
										":solutionId",
										"maps",
										":mapId",
										"specifications",
										":fileId"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution of the map"
										},
										{
											"key": "mapId",
											"value": "<long>",
											"description": "(Required) Node Id of the business workspace in BNAR"
										},
										{
											"key": "fileId",
											"value": "<long>",
											"description": "(Required) Id of the map specification"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<binary>\""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps/:mapId/specifications/:fileId",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions",
										":solutionId",
										"maps",
										":mapId",
										"specifications",
										":fileId"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution of the map"
										},
										{
											"key": "mapId",
											"value": "<long>",
											"description": "(Required) Node Id of the business workspace in BNAR"
										},
										{
											"key": "fileId",
											"value": "<long>",
											"description": "(Required) Id of the map specification"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps/:mapId/specifications/:fileId",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions",
										":solutionId",
										"maps",
										":mapId",
										"specifications",
										":fileId"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution of the map"
										},
										{
											"key": "mapId",
											"value": "<long>",
											"description": "(Required) Node Id of the business workspace in BNAR"
										},
										{
											"key": "fileId",
											"value": "<long>",
											"description": "(Required) Id of the map specification"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps/:mapId/specifications/:fileId",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions",
										":solutionId",
										"maps",
										":mapId",
										"specifications",
										":fileId"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution of the map"
										},
										{
											"key": "mapId",
											"value": "<long>",
											"description": "(Required) Node Id of the business workspace in BNAR"
										},
										{
											"key": "fileId",
											"value": "<long>",
											"description": "(Required) Id of the map specification"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Content Server Node Not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps/:mapId/specifications/:fileId",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions",
										":solutionId",
										"maps",
										":mapId",
										"specifications",
										":fileId"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution of the map"
										},
										{
											"key": "mapId",
											"value": "<long>",
											"description": "(Required) Node Id of the business workspace in BNAR"
										},
										{
											"key": "fileId",
											"value": "<long>",
											"description": "(Required) Id of the map specification"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps/:mapId/specifications/:fileId",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions",
										":solutionId",
										"maps",
										":mapId",
										"specifications",
										":fileId"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution of the map"
										},
										{
											"key": "mapId",
											"value": "<long>",
											"description": "(Required) Node Id of the business workspace in BNAR"
										},
										{
											"key": "fileId",
											"value": "<long>",
											"description": "(Required) Id of the map specification"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get Map Metadata",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps/:mapId/metadata",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"cartographer",
								"mp",
								"v1",
								"solutions",
								":solutionId",
								"maps",
								":mapId",
								"metadata"
							],
							"variable": [
								{
									"key": "solutionId",
									"value": "{{solutionId}}",
									"description": "(Required) Solution of the map"
								},
								{
									"key": "mapId",
									"value": "<long>",
									"description": "(Required) Node Id of the business workspace in BNAR"
								}
							]
						},
						"description": "Get metadata for a specific map within a solution, identified by solutionId and mapId."
					},
					"response": [
						{
							"name": "Map Metadata Fetched",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps/:mapId/metadata",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions",
										":solutionId",
										"maps",
										":mapId",
										"metadata"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution of the map"
										},
										{
											"key": "mapId",
											"value": "<long>",
											"description": "(Required) Node Id of the business workspace in BNAR"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"id\": \"<long>\",\n\t\"name\": \"<string>\",\n\t\"translator\": \"<string>\",\n\t\"status\": \"<string>\",\n\t\"direction\": \"<string>\",\n\t\"version\": \"<string>\",\n\t\"sourceDocType\": \"<string>\",\n\t\"sourceVersion\": \"<string>\",\n\t\"sourceStandard\": \"<string>\",\n\t\"sourceFormat\": \"<string>\",\n\t\"sourceTransaction\": \"<string>\",\n\t\"sourceApplication\": \"<string>\",\n\t\"targetDocType\": \"<string>\",\n\t\"targetVersion\": \"<string>\",\n\t\"targetStandard\": \"<string>\",\n\t\"targetFormat\": \"<string>\",\n\t\"targetTransaction\": \"<string>\",\n\t\"targetApplication\": \"<string>\",\n\t\"acceptanceState\": \"<string>\",\n\t\"standard\": \"<string>\",\n\t\"docType\": \"<string>\",\n\t\"sortingList\": \"<string>\",\n\t\"databaseLookup\": \"<boolean>\",\n\t\"sorting\": \"<boolean>\",\n\t\"carbonCopy\": \"<boolean>\",\n\t\"multipleTPLogic\": \"<boolean>\",\n\t\"multiByteData\": \"<boolean>\",\n\t\"chunking\": \"<boolean>\",\n\t\"passThrough\": \"<boolean>\",\n\t\"characterConversion\": \"<boolean>\",\n\t\"preProcess\": \"<boolean>\",\n\t\"customerModifiedMap\": \"<boolean>\",\n\t\"prodMap\": \"<boolean>\",\n\t\"lifecycleInfo\": {\n\t\t\"type\": \"<string>\",\n\t\t\"requestedTimeMs\": \"<long>\",\n\t\t\"scheduledTimeMs\": \"<long>\",\n\t\t\"requester\": \"<string>\"\n\t},\n\t\"stateInfo\": {\n\t\t\"userName\": \"<string>\",\n\t\t\"userId\": \"<string>\",\n\t\t\"timestamp\": \"<long>\"\n\t},\n\t\"commentCount\": \"<long>\",\n\t\"modified\": \"<long>\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps/:mapId/metadata",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions",
										":solutionId",
										"maps",
										":mapId",
										"metadata"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution of the map"
										},
										{
											"key": "mapId",
											"value": "<long>",
											"description": "(Required) Node Id of the business workspace in BNAR"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps/:mapId/metadata",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions",
										":solutionId",
										"maps",
										":mapId",
										"metadata"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution of the map"
										},
										{
											"key": "mapId",
											"value": "<long>",
											"description": "(Required) Node Id of the business workspace in BNAR"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps/:mapId/metadata",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions",
										":solutionId",
										"maps",
										":mapId",
										"metadata"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution of the map"
										},
										{
											"key": "mapId",
											"value": "<long>",
											"description": "(Required) Node Id of the business workspace in BNAR"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Map Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps/:mapId/metadata",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions",
										":solutionId",
										"maps",
										":mapId",
										"metadata"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution of the map"
										},
										{
											"key": "mapId",
											"value": "<long>",
											"description": "(Required) Node Id of the business workspace in BNAR"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps/:mapId/metadata",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions",
										":solutionId",
										"maps",
										":mapId",
										"metadata"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution of the map"
										},
										{
											"key": "mapId",
											"value": "<long>",
											"description": "(Required) Node Id of the business workspace in BNAR"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Map annotations",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps/:mapId/annotations",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"cartographer",
								"mp",
								"v1",
								"solutions",
								":solutionId",
								"maps",
								":mapId",
								"annotations"
							],
							"variable": [
								{
									"key": "solutionId",
									"value": "{{solutionId}}",
									"description": "(Required) Solution of the map"
								},
								{
									"key": "mapId",
									"value": "<long>",
									"description": "(Required) Node Id of the business workspace in BNAR"
								}
							]
						},
						"description": "Get annotations for a specific map within a solution, identified by solutionId and mapId."
					},
					"response": [
						{
							"name": "Map Annotations Fetched",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps/:mapId/annotations",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions",
										":solutionId",
										"maps",
										":mapId",
										"annotations"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution of the map"
										},
										{
											"key": "mapId",
											"value": "<long>",
											"description": "(Required) Node Id of the business workspace in BNAR"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"id\": \"<long>\",\n\t\"type\": \"<string>\",\n\t\"message\": [\n\t\t{\n\t\t\t\"user\": {\n\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\"\n\t\t\t},\n\t\t\t\"action\": \"<string>\",\n\t\t\t\"text\": \"<string>\",\n\t\t\t\"modified\": \"<long>\"\n\t\t},\n\t\t{\n\t\t\t\"user\": {\n\t\t\t\t\"id\": \"<string>\",\n\t\t\t\t\"name\": \"<string>\",\n\t\t\t\t\"type\": \"<string>\"\n\t\t\t},\n\t\t\t\"action\": \"<string>\",\n\t\t\t\"text\": \"<string>\",\n\t\t\t\"modified\": \"<long>\"\n\t\t}\n\t],\n\t\"replies\": [\n\t\t{\n\t\t\t\"value\": \"<Circular reference to #/components/schemas/Annotation detected>\"\n\t\t},\n\t\t{\n\t\t\t\"value\": \"<Circular reference to #/components/schemas/Annotation detected>\"\n\t\t}\n\t],\n\t\"attachments\": [\n\t\t{\n\t\t\t\"id\": \"<long>\",\n\t\t\t\"name\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<long>\",\n\t\t\t\"name\": \"<string>\"\n\t\t}\n\t],\n\t\"additionalInfo\": {\n\t\t\"jarName\": \"<string>\",\n\t\t\"jarVersion\": \"<string>\",\n\t\t\"mapVersion\": \"<string>\",\n\t\t\"sourceNodeId\": \"<string>\",\n\t\t\"targetNodeId\": \"<string>\",\n\t\t\"workOrderId\": \"<string>\"\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps/:mapId/annotations",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions",
										":solutionId",
										"maps",
										":mapId",
										"annotations"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution of the map"
										},
										{
											"key": "mapId",
											"value": "<long>",
											"description": "(Required) Node Id of the business workspace in BNAR"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps/:mapId/annotations",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions",
										":solutionId",
										"maps",
										":mapId",
										"annotations"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution of the map"
										},
										{
											"key": "mapId",
											"value": "<long>",
											"description": "(Required) Node Id of the business workspace in BNAR"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps/:mapId/annotations",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions",
										":solutionId",
										"maps",
										":mapId",
										"annotations"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution of the map"
										},
										{
											"key": "mapId",
											"value": "<long>",
											"description": "(Required) Node Id of the business workspace in BNAR"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Data Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps/:mapId/annotations",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions",
										":solutionId",
										"maps",
										":mapId",
										"annotations"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution of the map"
										},
										{
											"key": "mapId",
											"value": "<long>",
											"description": "(Required) Node Id of the business workspace in BNAR"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/mp/v1/solutions/:solutionId/maps/:mapId/annotations",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"mp",
										"v1",
										"solutions",
										":solutionId",
										"maps",
										":mapId",
										"annotations"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution of the map"
										},
										{
											"key": "mapId",
											"value": "<long>",
											"description": "(Required) Node Id of the business workspace in BNAR"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Cross Reference Api",
			"item": [
				{
					"name": "Get values of an entry",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/entries/:key",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"cartographer",
								"xref",
								"v1",
								"solutions",
								":solutionId",
								"entities",
								":entityName",
								"entries",
								":key"
							],
							"variable": [
								{
									"key": "solutionId",
									"value": "{{solutionId}}",
									"description": "(Required) Solution ID from which the entity's entry values will be fetched."
								},
								{
									"key": "entityName",
									"value": "<string>",
									"description": "(Required) Name of the entity from which the specified entry will be fetched."
								},
								{
									"key": "key",
									"value": "<string>",
									"description": "(Required) Key identifying the entry values under the specified entity and solution."
								}
							]
						},
						"description": "Retrieves the values of an entry identified by the solution ID and entity name."
					},
					"response": [
						{
							"name": "Entry Values Retrieved Successfully.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/entries/:key",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"entries",
										":key"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID from which the entity's entry values will be fetched."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity from which the specified entry will be fetched."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "(Required) Key identifying the entry values under the specified entity and solution."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"key\": \"<string>\",\n\t\"values\": [\n\t\t{\n\t\t\t\"index\": \"<integer>\",\n\t\t\t\"value\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"index\": \"<integer>\",\n\t\t\t\"value\": \"<string>\"\n\t\t}\n\t]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/entries/:key",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"entries",
										":key"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID from which the entity's entry values will be fetched."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity from which the specified entry will be fetched."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "(Required) Key identifying the entry values under the specified entity and solution."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/entries/:key",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"entries",
										":key"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID from which the entity's entry values will be fetched."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity from which the specified entry will be fetched."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "(Required) Key identifying the entry values under the specified entity and solution."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/entries/:key",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"entries",
										":key"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID from which the entity's entry values will be fetched."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity from which the specified entry will be fetched."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "(Required) Key identifying the entry values under the specified entity and solution."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Data Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/entries/:key",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"entries",
										":key"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID from which the entity's entry values will be fetched."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity from which the specified entry will be fetched."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "(Required) Key identifying the entry values under the specified entity and solution."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/entries/:key",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"entries",
										":key"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID from which the entity's entry values will be fetched."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity from which the specified entry will be fetched."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "(Required) Key identifying the entry values under the specified entity and solution."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update values of an entry",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"key\": \"<string>\",\n\t\"values\": [\n\t\t{\n\t\t\t\"index\": \"<integer>\",\n\t\t\t\"value\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"index\": \"<integer>\",\n\t\t\t\"value\": \"<string>\"\n\t\t}\n\t]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/entries/:key",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"cartographer",
								"xref",
								"v1",
								"solutions",
								":solutionId",
								"entities",
								":entityName",
								"entries",
								":key"
							],
							"variable": [
								{
									"key": "solutionId",
									"value": "{{solutionId}}",
									"description": "(Required) Solution ID in which the entity's entry values will be updated."
								},
								{
									"key": "entityName",
									"value": "<string>",
									"description": "(Required) Name of the entity whose entry values will be updated."
								},
								{
									"key": "key",
									"value": "<string>",
									"description": "(Required) Key of the entry to be updated under the specified entity and solution."
								}
							]
						},
						"description": "Updates the values of an entry identified by the solution ID and entity name."
					},
					"response": [
						{
							"name": "Entry Values Updated Successfully.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"key\": \"<string>\",\n\t\"values\": [\n\t\t{\n\t\t\t\"index\": \"<integer>\",\n\t\t\t\"value\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"index\": \"<integer>\",\n\t\t\t\"value\": \"<string>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/entries/:key",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"entries",
										":key"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID in which the entity's entry values will be updated."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity whose entry values will be updated."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "(Required) Key of the entry to be updated under the specified entity and solution."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"key\": \"<string>\",\n\t\"values\": [\n\t\t{\n\t\t\t\"index\": \"<integer>\",\n\t\t\t\"value\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"index\": \"<integer>\",\n\t\t\t\"value\": \"<string>\"\n\t\t}\n\t]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"key\": \"<string>\",\n\t\"values\": [\n\t\t{\n\t\t\t\"index\": \"<integer>\",\n\t\t\t\"value\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"index\": \"<integer>\",\n\t\t\t\"value\": \"<string>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/entries/:key",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"entries",
										":key"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID in which the entity's entry values will be updated."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity whose entry values will be updated."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "(Required) Key of the entry to be updated under the specified entity and solution."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"key\": \"<string>\",\n\t\"values\": [\n\t\t{\n\t\t\t\"index\": \"<integer>\",\n\t\t\t\"value\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"index\": \"<integer>\",\n\t\t\t\"value\": \"<string>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/entries/:key",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"entries",
										":key"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID in which the entity's entry values will be updated."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity whose entry values will be updated."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "(Required) Key of the entry to be updated under the specified entity and solution."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"key\": \"<string>\",\n\t\"values\": [\n\t\t{\n\t\t\t\"index\": \"<integer>\",\n\t\t\t\"value\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"index\": \"<integer>\",\n\t\t\t\"value\": \"<string>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/entries/:key",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"entries",
										":key"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID in which the entity's entry values will be updated."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity whose entry values will be updated."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "(Required) Key of the entry to be updated under the specified entity and solution."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Data Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"key\": \"<string>\",\n\t\"values\": [\n\t\t{\n\t\t\t\"index\": \"<integer>\",\n\t\t\t\"value\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"index\": \"<integer>\",\n\t\t\t\"value\": \"<string>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/entries/:key",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"entries",
										":key"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID in which the entity's entry values will be updated."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity whose entry values will be updated."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "(Required) Key of the entry to be updated under the specified entity and solution."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"key\": \"<string>\",\n\t\"values\": [\n\t\t{\n\t\t\t\"index\": \"<integer>\",\n\t\t\t\"value\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"index\": \"<integer>\",\n\t\t\t\"value\": \"<string>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/entries/:key",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"entries",
										":key"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID in which the entity's entry values will be updated."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity whose entry values will be updated."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "(Required) Key of the entry to be updated under the specified entity and solution."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Delete an entry",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/entries/:key",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"cartographer",
								"xref",
								"v1",
								"solutions",
								":solutionId",
								"entities",
								":entityName",
								"entries",
								":key"
							],
							"variable": [
								{
									"key": "solutionId",
									"value": "{{solutionId}}",
									"description": "(Required) Solution ID from which the entry will be deleted."
								},
								{
									"key": "entityName",
									"value": "<string>",
									"description": "(Required) Name of the entity from which the specified entry will be deleted."
								},
								{
									"key": "key",
									"value": "<string>",
									"description": "(Required) Key of the entry to be deleted under the specified entity and solution."
								}
							]
						},
						"description": "Deletes an entry from an entity identified by the solution ID and entity name."
					},
					"response": [
						{
							"name": "Entry Deleted Successfully.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/entries/:key",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"entries",
										":key"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID from which the entry will be deleted."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity from which the specified entry will be deleted."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "(Required) Key of the entry to be deleted under the specified entity and solution."
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/entries/:key",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"entries",
										":key"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID from which the entry will be deleted."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity from which the specified entry will be deleted."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "(Required) Key of the entry to be deleted under the specified entity and solution."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/entries/:key",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"entries",
										":key"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID from which the entry will be deleted."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity from which the specified entry will be deleted."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "(Required) Key of the entry to be deleted under the specified entity and solution."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/entries/:key",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"entries",
										":key"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID from which the entry will be deleted."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity from which the specified entry will be deleted."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "(Required) Key of the entry to be deleted under the specified entity and solution."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Data Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/entries/:key",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"entries",
										":key"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID from which the entry will be deleted."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity from which the specified entry will be deleted."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "(Required) Key of the entry to be deleted under the specified entity and solution."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/entries/:key",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"entries",
										":key"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID from which the entry will be deleted."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity from which the specified entry will be deleted."
										},
										{
											"key": "key",
											"value": "<string>",
											"description": "(Required) Key of the entry to be deleted under the specified entity and solution."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Add an entry",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"key\": \"<string>\",\n\t\"values\": [\n\t\t{\n\t\t\t\"index\": \"<integer>\",\n\t\t\t\"value\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"index\": \"<integer>\",\n\t\t\t\"value\": \"<string>\"\n\t\t}\n\t]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/entries",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"cartographer",
								"xref",
								"v1",
								"solutions",
								":solutionId",
								"entities",
								":entityName",
								"entries"
							],
							"variable": [
								{
									"key": "solutionId",
									"value": "{{solutionId}}",
									"description": "(Required) Solution ID under which the entry will be added."
								},
								{
									"key": "entityName",
									"value": "<string>",
									"description": "(Required) Name of the entity to which the entry will be added."
								}
							]
						},
						"description": "Adds a new entry to an entity identified by the solution ID and entity name."
					},
					"response": [
						{
							"name": "Entry Added Successfully.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"key\": \"<string>\",\n\t\"values\": [\n\t\t{\n\t\t\t\"index\": \"<integer>\",\n\t\t\t\"value\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"index\": \"<integer>\",\n\t\t\t\"value\": \"<string>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/entries",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"entries"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID under which the entry will be added."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity to which the entry will be added."
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"key\": \"<string>\",\n\t\"values\": [\n\t\t{\n\t\t\t\"index\": \"<integer>\",\n\t\t\t\"value\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"index\": \"<integer>\",\n\t\t\t\"value\": \"<string>\"\n\t\t}\n\t]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"key\": \"<string>\",\n\t\"values\": [\n\t\t{\n\t\t\t\"index\": \"<integer>\",\n\t\t\t\"value\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"index\": \"<integer>\",\n\t\t\t\"value\": \"<string>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/entries",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"entries"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID under which the entry will be added."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity to which the entry will be added."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"key\": \"<string>\",\n\t\"values\": [\n\t\t{\n\t\t\t\"index\": \"<integer>\",\n\t\t\t\"value\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"index\": \"<integer>\",\n\t\t\t\"value\": \"<string>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/entries",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"entries"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID under which the entry will be added."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity to which the entry will be added."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"key\": \"<string>\",\n\t\"values\": [\n\t\t{\n\t\t\t\"index\": \"<integer>\",\n\t\t\t\"value\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"index\": \"<integer>\",\n\t\t\t\"value\": \"<string>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/entries",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"entries"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID under which the entry will be added."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity to which the entry will be added."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Data Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"key\": \"<string>\",\n\t\"values\": [\n\t\t{\n\t\t\t\"index\": \"<integer>\",\n\t\t\t\"value\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"index\": \"<integer>\",\n\t\t\t\"value\": \"<string>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/entries",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"entries"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID under which the entry will be added."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity to which the entry will be added."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"key\": \"<string>\",\n\t\"values\": [\n\t\t{\n\t\t\t\"index\": \"<integer>\",\n\t\t\t\"value\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"index\": \"<integer>\",\n\t\t\t\"value\": \"<string>\"\n\t\t}\n\t]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/entries",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"entries"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID under which the entry will be added."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity to which the entry will be added."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get entities",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities?offset=<integer>&count=<integer>",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"cartographer",
								"xref",
								"v1",
								"solutions",
								":solutionId",
								"entities"
							],
							"query": [
								{
									"key": "offset",
									"value": "<integer>",
									"description": "Number of entities to skip before starting to collect the results."
								},
								{
									"key": "count",
									"value": "<integer>",
									"description": "Number of entities to return per page."
								}
							],
							"variable": [
								{
									"key": "solutionId",
									"value": "{{solutionId}}",
									"description": "(Required) Solution ID for which the entities should be listed."
								}
							]
						},
						"description": "Retrieves entities for a solution identified by the solution ID."
					},
					"response": [
						{
							"name": "Entities Retrieved Successfully.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities?offset=<integer>&count=<integer>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities"
									],
									"query": [
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "count",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID for which the entities should be listed."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"totalCount\": \"<integer>\",\n\t\"fetchedCount\": \"<integer>\",\n\t\"entities\": [\n\t\t{\n\t\t\t\"id\": \"<long>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"description\": \"<string>\",\n\t\t\t\"numberRows\": \"<integer>\",\n\t\t\t\"numberVersions\": \"<integer>\",\n\t\t\t\"createDate\": \"<long>\",\n\t\t\t\"availableDate\": \"<long>\",\n\t\t\t\"isReadOnly\": \"<boolean>\",\n\t\t\t\"isLocked\": \"<boolean>\",\n\t\t\t\"lockDate\": \"<long>\",\n\t\t\t\"lockedBy\": \"<string>\",\n\t\t\t\"maxRows\": \"<integer>\",\n\t\t\t\"keyDelimiter\": \"<string>\",\n\t\t\t\"valueDelimiter\": \"<string>\",\n\t\t\t\"prefix\": \"<string>\",\n\t\t\t\"uniqueKey\": \"<boolean>\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"<long>\",\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"description\": \"<string>\",\n\t\t\t\"numberRows\": \"<integer>\",\n\t\t\t\"numberVersions\": \"<integer>\",\n\t\t\t\"createDate\": \"<long>\",\n\t\t\t\"availableDate\": \"<long>\",\n\t\t\t\"isReadOnly\": \"<boolean>\",\n\t\t\t\"isLocked\": \"<boolean>\",\n\t\t\t\"lockDate\": \"<long>\",\n\t\t\t\"lockedBy\": \"<string>\",\n\t\t\t\"maxRows\": \"<integer>\",\n\t\t\t\"keyDelimiter\": \"<string>\",\n\t\t\t\"valueDelimiter\": \"<string>\",\n\t\t\t\"prefix\": \"<string>\",\n\t\t\t\"uniqueKey\": \"<boolean>\"\n\t\t}\n\t],\n\t\"_links\": {\n\t\t\"self\": {\n\t\t\t\"href\": \"<string>\"\n\t\t},\n\t\t\"next\": {\n\t\t\t\"href\": \"<string>\"\n\t\t},\n\t\t\"previous\": {\n\t\t\t\"href\": \"<string>\"\n\t\t}\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities?offset=<integer>&count=<integer>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities"
									],
									"query": [
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "count",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID for which the entities should be listed."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities?offset=<integer>&count=<integer>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities"
									],
									"query": [
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "count",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID for which the entities should be listed."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities?offset=<integer>&count=<integer>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities"
									],
									"query": [
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "count",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID for which the entities should be listed."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Data Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities?offset=<integer>&count=<integer>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities"
									],
									"query": [
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "count",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID for which the entities should be listed."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities?offset=<integer>&count=<integer>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities"
									],
									"query": [
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "count",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID for which the entities should be listed."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get entity header configuration",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/header-config",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"cartographer",
								"xref",
								"v1",
								"solutions",
								":solutionId",
								"entities",
								":entityName",
								"header-config"
							],
							"variable": [
								{
									"key": "solutionId",
									"value": "{{solutionId}}",
									"description": "(Required) Solution ID for which the entity's header configuration is to be retrieved."
								},
								{
									"key": "entityName",
									"value": "<string>",
									"description": "(Required) Name of the entity for which the header configuration is to be retrieved."
								}
							]
						},
						"description": "Retrieves the header configuration of an entity identified by the solution ID and entity name.<br><br> Header configuration is available only for TG16 and AICS entities."
					},
					"response": [
						{
							"name": "Header Configuration Retrieved Successfully.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/header-config",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"header-config"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID for which the entity's header configuration is to be retrieved."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity for which the header configuration is to be retrieved."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"keyHeaders\": [\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"mandatory\": \"<boolean>\",\n\t\t\t\"regularExpressions\": \"<string>\",\n\t\t\t\"headerLabel\": \"<string>\",\n\t\t\t\"customLabel\": \"<string>\",\n\t\t\t\"minLength\": \"<integer>\",\n\t\t\t\"maxLength\": \"<integer>\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"mandatory\": \"<boolean>\",\n\t\t\t\"regularExpressions\": \"<string>\",\n\t\t\t\"headerLabel\": \"<string>\",\n\t\t\t\"customLabel\": \"<string>\",\n\t\t\t\"minLength\": \"<integer>\",\n\t\t\t\"maxLength\": \"<integer>\"\n\t\t}\n\t],\n\t\"valueHeaders\": [\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"mandatory\": \"<boolean>\",\n\t\t\t\"regularExpressions\": \"<string>\",\n\t\t\t\"headerLabel\": \"<string>\",\n\t\t\t\"customLabel\": \"<string>\",\n\t\t\t\"minLength\": \"<integer>\",\n\t\t\t\"maxLength\": \"<integer>\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"mandatory\": \"<boolean>\",\n\t\t\t\"regularExpressions\": \"<string>\",\n\t\t\t\"headerLabel\": \"<string>\",\n\t\t\t\"customLabel\": \"<string>\",\n\t\t\t\"minLength\": \"<integer>\",\n\t\t\t\"maxLength\": \"<integer>\"\n\t\t}\n\t],\n\t\"columnHeaders\": [\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"mandatory\": \"<boolean>\",\n\t\t\t\"regularExpressions\": \"<string>\",\n\t\t\t\"headerLabel\": \"<string>\",\n\t\t\t\"customLabel\": \"<string>\",\n\t\t\t\"minLength\": \"<integer>\",\n\t\t\t\"maxLength\": \"<integer>\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"<string>\",\n\t\t\t\"mandatory\": \"<boolean>\",\n\t\t\t\"regularExpressions\": \"<string>\",\n\t\t\t\"headerLabel\": \"<string>\",\n\t\t\t\"customLabel\": \"<string>\",\n\t\t\t\"minLength\": \"<integer>\",\n\t\t\t\"maxLength\": \"<integer>\"\n\t\t}\n\t]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/header-config",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"header-config"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID for which the entity's header configuration is to be retrieved."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity for which the header configuration is to be retrieved."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/header-config",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"header-config"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID for which the entity's header configuration is to be retrieved."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity for which the header configuration is to be retrieved."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/header-config",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"header-config"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID for which the entity's header configuration is to be retrieved."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity for which the header configuration is to be retrieved."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Data Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/header-config",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"header-config"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID for which the entity's header configuration is to be retrieved."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity for which the header configuration is to be retrieved."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/header-config",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"header-config"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID for which the entity's header configuration is to be retrieved."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity for which the header configuration is to be retrieved."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Export entity content",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/export",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"cartographer",
								"xref",
								"v1",
								"solutions",
								":solutionId",
								"entities",
								":entityName",
								"export"
							],
							"variable": [
								{
									"key": "solutionId",
									"value": "{{solutionId}}",
									"description": "(Required) Solution ID under which the entity is located."
								},
								{
									"key": "entityName",
									"value": "<string>",
									"description": "(Required) Name of the entity to be exported."
								}
							]
						},
						"description": "Exports the content of an entity identified by the solution ID and entity name.<br><br><b>Note:</b> Pre-cross-reference data is not supported."
					},
					"response": [
						{
							"name": "Entity Content Exported Successfully.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/export",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"export"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID under which the entity is located."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity to be exported."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<binary>\""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/export",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"export"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID under which the entity is located."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity to be exported."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/export",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"export"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID under which the entity is located."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity to be exported."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/export",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"export"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID under which the entity is located."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity to be exported."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Data Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/export",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"export"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID under which the entity is located."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity to be exported."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/export",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"export"
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID under which the entity is located."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity to be exported."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get entity details",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/content?offset=<integer>&count=<integer>",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"cartographer",
								"xref",
								"v1",
								"solutions",
								":solutionId",
								"entities",
								":entityName",
								"content"
							],
							"query": [
								{
									"key": "offset",
									"value": "<integer>",
									"description": "Number of entries to skip before starting to collect the results."
								},
								{
									"key": "count",
									"value": "<integer>",
									"description": "Number of entries to return per page."
								}
							],
							"variable": [
								{
									"key": "solutionId",
									"value": "{{solutionId}}",
									"description": "(Required) Solution ID from which the entity details will be retrieved."
								},
								{
									"key": "entityName",
									"value": "<string>",
									"description": "(Required) Name of the entity for which details will be retrieved."
								}
							]
						},
						"description": "Retrieves entity details from a solution identified by the solution ID and entity name."
					},
					"response": [
						{
							"name": "Entity Details Retrieved Successfully.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/content?offset=<integer>&count=<integer>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"content"
									],
									"query": [
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "count",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID from which the entity details will be retrieved."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity for which details will be retrieved."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"totalCount\": \"<integer>\",\n\t\"fetchedCount\": \"<integer>\",\n\t\"entries\": [\n\t\t{\n\t\t\t\"key\": \"<string>\",\n\t\t\t\"values\": [\n\t\t\t\t{\n\t\t\t\t\t\"index\": \"<integer>\",\n\t\t\t\t\t\"value\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"index\": \"<integer>\",\n\t\t\t\t\t\"value\": \"<string>\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"type\": \"<string>\"\n\t\t},\n\t\t{\n\t\t\t\"key\": \"<string>\",\n\t\t\t\"values\": [\n\t\t\t\t{\n\t\t\t\t\t\"index\": \"<integer>\",\n\t\t\t\t\t\"value\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"index\": \"<integer>\",\n\t\t\t\t\t\"value\": \"<string>\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"type\": \"<string>\"\n\t\t}\n\t],\n\t\"_links\": {\n\t\t\"self\": {\n\t\t\t\"href\": \"<string>\"\n\t\t},\n\t\t\"next\": {\n\t\t\t\"href\": \"<string>\"\n\t\t},\n\t\t\"previous\": {\n\t\t\t\"href\": \"<string>\"\n\t\t}\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/content?offset=<integer>&count=<integer>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"content"
									],
									"query": [
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "count",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID from which the entity details will be retrieved."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity for which details will be retrieved."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/content?offset=<integer>&count=<integer>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"content"
									],
									"query": [
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "count",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID from which the entity details will be retrieved."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity for which details will be retrieved."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/content?offset=<integer>&count=<integer>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"content"
									],
									"query": [
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "count",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID from which the entity details will be retrieved."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity for which details will be retrieved."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Data Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/content?offset=<integer>&count=<integer>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"content"
									],
									"query": [
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "count",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID from which the entity details will be retrieved."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity for which details will be retrieved."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/content?offset=<integer>&count=<integer>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"content"
									],
									"query": [
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "count",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID from which the entity details will be retrieved."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity for which details will be retrieved."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Search entity content",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "Authorization",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{token}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/content-search?searchToken=<string>&offset=<integer>&count=<integer>&onlyCount=<boolean>",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"cartographer",
								"xref",
								"v1",
								"solutions",
								":solutionId",
								"entities",
								":entityName",
								"content-search"
							],
							"query": [
								{
									"key": "searchToken",
									"value": "<string>",
									"description": "(Required) Keyword or token to be searched in the entity content."
								},
								{
									"key": "offset",
									"value": "<integer>",
									"description": "Number of items to skip before starting to collect the results."
								},
								{
									"key": "count",
									"value": "<integer>",
									"description": "Number of items to return in the result set."
								},
								{
									"key": "onlyCount",
									"value": "<boolean>",
									"description": "If true, returns only the total count of matching records without including the actual data."
								}
							],
							"variable": [
								{
									"key": "solutionId",
									"value": "{{solutionId}}",
									"description": "(Required) Solution ID under which the entity resides."
								},
								{
									"key": "entityName",
									"value": "<string>",
									"description": "(Required) Name of the entity whose content is to be searched."
								}
							]
						},
						"description": "Searches the content of an entity identified by the solution ID and entity name."
					},
					"response": [
						{
							"name": "Searched entity content retrieved successfully.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/content-search?searchToken=<string>&offset=<integer>&count=<integer>&onlyCount=<boolean>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"content-search"
									],
									"query": [
										{
											"key": "searchToken",
											"value": "<string>"
										},
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "count",
											"value": "<integer>"
										},
										{
											"key": "onlyCount",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID under which the entity resides."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity whose content is to be searched."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"totalCount\": \"<integer>\",\n\t\"fetchedCount\": \"<integer>\",\n\t\"entries\": [\n\t\t{\n\t\t\t\"key\": \"<string>\",\n\t\t\t\"values\": [\n\t\t\t\t{\n\t\t\t\t\t\"index\": \"<integer>\",\n\t\t\t\t\t\"value\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"index\": \"<integer>\",\n\t\t\t\t\t\"value\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"key\": \"<string>\",\n\t\t\t\"values\": [\n\t\t\t\t{\n\t\t\t\t\t\"index\": \"<integer>\",\n\t\t\t\t\t\"value\": \"<string>\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"index\": \"<integer>\",\n\t\t\t\t\t\"value\": \"<string>\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"_links\": {\n\t\t\"self\": {\n\t\t\t\"href\": \"<string>\"\n\t\t},\n\t\t\"next\": {\n\t\t\t\"href\": \"<string>\"\n\t\t},\n\t\t\"previous\": {\n\t\t\t\"href\": \"<string>\"\n\t\t}\n\t}\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/content-search?searchToken=<string>&offset=<integer>&count=<integer>&onlyCount=<boolean>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"content-search"
									],
									"query": [
										{
											"key": "searchToken",
											"value": "<string>"
										},
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "count",
											"value": "<integer>"
										},
										{
											"key": "onlyCount",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID under which the entity resides."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity whose content is to be searched."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/content-search?searchToken=<string>&offset=<integer>&count=<integer>&onlyCount=<boolean>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"content-search"
									],
									"query": [
										{
											"key": "searchToken",
											"value": "<string>"
										},
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "count",
											"value": "<integer>"
										},
										{
											"key": "onlyCount",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID under which the entity resides."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity whose content is to be searched."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/content-search?searchToken=<string>&offset=<integer>&count=<integer>&onlyCount=<boolean>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"content-search"
									],
									"query": [
										{
											"key": "searchToken",
											"value": "<string>"
										},
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "count",
											"value": "<integer>"
										},
										{
											"key": "onlyCount",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID under which the entity resides."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity whose content is to be searched."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Data Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/content-search?searchToken=<string>&offset=<integer>&count=<integer>&onlyCount=<boolean>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"content-search"
									],
									"query": [
										{
											"key": "searchToken",
											"value": "<string>"
										},
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "count",
											"value": "<integer>"
										},
										{
											"key": "onlyCount",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID under which the entity resides."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity whose content is to be searched."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Authorization",
										"value": "{{token}}"
									}
								],
								"url": {
									"raw": "{{api_host}}/cartographer/xref/v1/solutions/:solutionId/entities/:entityName/content-search?searchToken=<string>&offset=<integer>&count=<integer>&onlyCount=<boolean>",
									"host": [
										"{{api_host}}"
									],
									"path": [
										"cartographer",
										"xref",
										"v1",
										"solutions",
										":solutionId",
										"entities",
										":entityName",
										"content-search"
									],
									"query": [
										{
											"key": "searchToken",
											"value": "<string>"
										},
										{
											"key": "offset",
											"value": "<integer>"
										},
										{
											"key": "count",
											"value": "<integer>"
										},
										{
											"key": "onlyCount",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "solutionId",
											"value": "{{solutionId}}",
											"description": "(Required) Solution ID under which the entity resides."
										},
										{
											"key": "entityName",
											"value": "<string>",
											"description": "(Required) Name of the entity whose content is to be searched."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"status\": \"<string>\",\n\t\"message\": \"<string>\",\n\t\"error-code\": \"<string>\"\n}"
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:4200/mappingportal/",
			"type": "string"
		}
	]
}